version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: note-user
      POSTGRES_PASSWORD: note-password
      POSTGRES_DB: note
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U note-user -d note"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - course-db-data:/var/lib/postgresql/data
    ports:
      - "54321:5432"
    networks:
      - app-network

  server:
    build:
      context: grpc
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: note
      DB_USER: note-user
      DB_PASSWORD: note-password
    ports:
      - "50051:50051"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  envoy:
    image: envoyproxy/envoy:v1.29.0
    volumes:
      - ./frontend/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "8080:8080"
      - "9901:9901"  # Административный порт для healthcheck
    networks:
      - app-network

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network

volumes:
  course-db-data:

networks:
  app-network:
    driver: bridge
